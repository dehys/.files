#▒▒▒▒▒▒▒▒▒▄██████     ▄▄▄█▄
#▒▒▒▒▒▒▒▄██▀░░▀██▄    ████████▄
#▒▒▒▒▒▒███░░░░░░██      █▀▀▀▀▀██▄▄
#▒▒▒▒▒▄██▌░░░░░░░██    ▐▌        ▀█▄
#▒▒▒▒▒███░░▐█░█▌░██    █▌          ▀▌
#▒▒▒▒████░▐█▌░▐█▌██   ██        ──────────────────────────────────────────────
#▒▒▒▐████░▐░░░░░▌██   █▌           Neofetch 'Reaper' configuration by Dehys
#▒▒▒▒████░░░▄█░░░██  ▐█         ──────────────────────────────────────────────
#▒▒▒▒████░░░██░░██▌  █▌         >   Version: 1.0.0
#▒▒▒▒████▌░▐█░░███   █          >   License: MIT
#▒▒▒▒▐████░░▌░███   ██          >   Author: Arijan (Dehys) Nikoci
#▒▒▒▒▒████░░░███    █▌
#▒▒▒██████▌░████   ██           Link: https://github.com/dehys/reaper-qtile/neofetch
#▒▐████████████  ███            Github: https://github.com/dehys
#▒█████████████▄████            Website: https://dehys.com
#██████████████████             Discord: https://discord.gg/SxwUsgk 


# Main Function - This prints out the output you see in your terminal
print_info() {
    # The Title, see print_title function
    # Default="USER 'Reaper'"
    print_title "$(color 12)@$USER $(color 0)'Reaper'" 
    echo # New line
    # The OS information, Default=" os 	Arch 	...btw"
    # Additionaly you can set the OS to be automatically detected by replacing
    # the two '""' with 'distro' which will print out the distribution your on
    # This is not set by default as I like minimalism.
    printr "" "os \t$(color 13)Arch" "" "\t$(color 5)...btw" "true"
    # The package information, Default="ﰩ pkgs 	448 	#bloated"
    printr "ﰩ" "pkgs \t" packages "\t$(color 4)#bloated" "true"
    # The shell information, Default="ﲵ shell 	zsh 	The one and only"
    printr "ﲵ" "shell \t" shell "\t$(color 1)The one and only" "true"
    # The WM information, Default=" wm 	qtile 	Never g.g.y.u." #Rickrolled
    printr "" "wm \t" wm "\t$(color 11)Never g.g.y.u." "true"
    # The terminal information, Default=" term 	kitty 	I hate cats"
    printr "" "term \t" term "$(color 3)\tI hate cats" "true"
    # The memory information, Default=" mem 	13% 	chromium?"
    # Using awk to only display percentage. again, I like minimalism.
    # Additionally you can use the neofetch function 'memory'
    printr "" "mem \t" "$(free -g | awk '/Mem:/ { total=$2 } /Mem:/ { used=$3 } END { print int(used/total*100)"%" }')" "\t$(color 14)chromium?"
    # The battery information, Default=" battery 	47% 	tablet hehe"
    # Using awk to only display percentage, again... minima...
    # Additionally you can use the neofetch function 'battery'
    printr "" "battery \t" "$(printf "$(cat /sys/class/power_supply/BAT0/charge_now) $(cat /sys/class/power_supply/BAT0/charge_full)" | awk '{ used=$1 } { total=$2 } END { print int(used/total*100)"%" }')" "\t$(color 2)tablet hehe"
    # The Song, see print_song function
    # Default=" %artist% - %title%"
    print_song "" "" song
    echo # New line
    # This if statement checks if a song is being played or not
    # If a song is not being played, we make the color colums bigger
    # by printing out 1 more row. Else we print it out with just 2 rows.
    if [ "$NO_SONG_PLAYING" == "true" ]; then
        echo # New line
        printf "$(colors '▟███ ' '0;3')\n" # Print colors colum
        printf "$(colors '████ ' '0;3')\n" # Print colors colum
    else
        printf "$(colors '▟███ ' '0;3')\n" # Print colors colum
    fi
    printf "$(colors '███▛ ' '0;3')\n" # Print colors colum 
}

# A custom printer function to handle variables
# Syntax = unicode, prefix, function, description/comment
printr() {
    if [ "$3" ] && [ "$5" == "true" ]; then
        get_$3 &>/dev/null
        eval local out="\${$3:-$3}"
    else
        eval local out="$3"
    fi
    prin "$(color 7)$1 $(color 15)$2$(color 13)$7$out $(color 7)$4"
}

# A custom printer function to handle title
# Syntax = title, function
print_title() {
    if [ "$2" ]; then
        get_$2 &>/dev/null
        eval local out="\${$2:-$2}"   
    fi
    prin "$1$out"
}

# A custom printer function to handle song
# Syntax = unicode, prefix, function
print_song(){
    if [ "$3" ]; then
        get_$3 &>/dev/null
        eval local out="\${$3:-$3}"
    fi
    if [ ! -z "$out" ] && [ "$out" != "song" ]; then
        echo
        prin "$(color 7)$1 $(color 8)$2$(color 4)$out"
        export NO_SONG_PLAYING=false
    else
        export NO_SONG_PLAYING=true
    fi
}

# A custom printer to handle the displaying of colors
colors() {
    printf "${text_padding+\033[${text_padding}C}"
    printf "$(seq 1 7 | xargs printf "\033[${2}%sm$1")$(printf "\033[0m")"
}

# Standard neofetch configuration variables
os_arch="off"
package_managers="off"
shell_version="off"
song_format="%artist% - %title%"
image_backend="kitty"
image_source="/home/dehys/pictures/neofetch/reaper-w.png"
image_size="360px"
gap=2
